// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace How2CSSBlazor.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using How2CSSBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using How2CSSBlazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using How2CSSBlazor.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/antachievs")]
    public partial class AntAchievements : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 60 "C:\Users\kulch\source\repos\How2CSSBlazor\How2CSSBlazor\Shared\AntAchievements.razor"
       
    private List<SimpleAchievData> simpleAchievDatas { get; set; } = new List<SimpleAchievData>();
    HttpClient client = new HttpClient();

    public bool titleMode { get; set; } = false;
    public bool comCountMode { get; set; } = false;
    public bool corCountMode { get; set; } = false;
    public bool curMarkMode { get; set; } = false;
    public bool tryNumMode { get; set; } = false;
    public bool saveDateMode { get; set; } = false;
    public string searchUserEmail { get; set; } = "turyanmykh@gmail.com";
    public bool isFounded { get; set; } = false;


    public async void loadAchievs()
    {
        HttpResponseMessage response = await client.GetAsync("https://localhost:5001/api/users/search/" + searchUserEmail);
        if (response.IsSuccessStatusCode)
        {
            isFounded = await response.Content.ReadAsAsync<bool>();
            if (isFounded)
            {
                response = await client.GetAsync("https://localhost:5001/api/achievdatas/simple/" + searchUserEmail);
                if (response.IsSuccessStatusCode)
                {
                    simpleAchievDatas = await response.Content.ReadAsAsync<List<SimpleAchievData>>();
                }
                else
                {
                    simpleAchievDatas = null;
                }
            }
            else
            {
                simpleAchievDatas = null;
            }
        }
        else
        {
            simpleAchievDatas = null;
        }
    }

    public void byTitleSort()
    {
        if (titleMode)
        {
            simpleAchievDatas.Sort((a, b) => a.TrainingTestTitle.CompareTo(b.TrainingTestTitle));
        }
        else
        {
            simpleAchievDatas.Sort((a, b) => b.TrainingTestTitle.CompareTo(a.TrainingTestTitle));
        }
        titleMode = !titleMode;
    }

    public void byComCountSort()
    {
        if (comCountMode)
        {
            simpleAchievDatas.Sort((a, b) => a.CompletedCount.CompareTo(b.CompletedCount));
        }
        else
        {
            simpleAchievDatas.Sort((a, b) => b.CompletedCount.CompareTo(a.CompletedCount));
        }
        comCountMode = !comCountMode;
    }

    public void byCorCountSort()
    {
        if (corCountMode)
        {
            simpleAchievDatas.Sort((a, b) => a.CorrectCount.CompareTo(b.CorrectCount));
        }
        else
        {
            simpleAchievDatas.Sort((a, b) => b.CorrectCount.CompareTo(a.CorrectCount));
        }
        corCountMode = !corCountMode;
    }

    public void byCurMarkSort()
    {
        if (curMarkMode)
        {
            simpleAchievDatas.Sort((a, b) => (a.CurrentMark > b.CurrentMark) ? 1 : (b.CurrentMark > a.CurrentMark) ? -1 : 0);
        }
        else
        {
            simpleAchievDatas.Sort((a, b) => (a.CurrentMark < b.CurrentMark) ? 1 : (b.CurrentMark < a.CurrentMark) ? -1 : 0);
        }
        curMarkMode = !curMarkMode;
    }

    public void byTryNumSort()
    {
        if (tryNumMode)
        {
            simpleAchievDatas.Sort((a, b) => (a.TryCount > b.TryCount) ? 1 : (b.TryCount > a.TryCount) ? -1 : 0);
        }
        else
        {
            simpleAchievDatas.Sort((a, b) => (a.TryCount < b.TryCount) ? 1 : (b.TryCount < a.TryCount) ? -1 : 0);
        }
        tryNumMode = !tryNumMode;
    }

    public void bySaveDateSort()
    {
        if (saveDateMode)
        {
            simpleAchievDatas.Sort((a, b) => (a.SaveDate > b.SaveDate) ? 1 : (b.SaveDate > a.SaveDate) ? -1 : 0);
        }
        else
        {
            simpleAchievDatas.Sort((a, b) => (a.SaveDate < b.SaveDate) ? 1 : (b.SaveDate < a.SaveDate) ? -1 : 0);
        }
        saveDateMode = !saveDateMode;
    }

    string TitleCssClass()
    {
        var cssClass = new List<string>();
        cssClass.Add("fas");
        cssClass.Add("fa-2x");
        if (titleMode)
        {
            cssClass.Add("fa-caret-up");
        }
        else
        {
            cssClass.Add("fa-caret-down");
        }
        return string.Join(' ', cssClass);
    }
    string ComCountCssClass()
    {
        var cssClass = new List<string>();
        cssClass.Add("fas");
        cssClass.Add("fa-2x");
        if (comCountMode)
        {
            cssClass.Add("fa-caret-up");
        }
        else
        {
            cssClass.Add("fa-caret-down");
        }
        return string.Join(' ', cssClass);
    }
    string CorCountCssClass()
    {
        var cssClass = new List<string>();
        cssClass.Add("fas");
        cssClass.Add("fa-2x");
        if (corCountMode)
        {
            cssClass.Add("fa-caret-up");
        }
        else
        {
            cssClass.Add("fa-caret-down");
        }
        return string.Join(' ', cssClass);
    }
    string CurMarkCssClass()
    {
        var cssClass = new List<string>();
        cssClass.Add("fas");
        cssClass.Add("fa-2x");
        if (curMarkMode)
        {
            cssClass.Add("fa-caret-up");
        }
        else
        {
            cssClass.Add("fa-caret-down");
        }
        return string.Join(' ', cssClass);
    }
    string TryNumCssClass()
    {
        var cssClass = new List<string>();
        cssClass.Add("fas");
        cssClass.Add("fa-2x");
        if (tryNumMode)
        {
            cssClass.Add("fa-caret-up");
        }
        else
        {
            cssClass.Add("fa-caret-down");
        }
        return string.Join(' ', cssClass);
    }
    string SaveDateCssClass()
    {
        var cssClass = new List<string>();
        cssClass.Add("fas");
        cssClass.Add("fa-2x");
        if (saveDateMode)
        {
            cssClass.Add("fa-caret-up");
        }
        else
        {
            cssClass.Add("fa-caret-down");
        }
        return string.Join(' ', cssClass);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.LocalStorage.ILocalStorageService localStore { get; set; }
    }
}
#pragma warning restore 1591
